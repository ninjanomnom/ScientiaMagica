<#@ template hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ output extension=".cs" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ import namespace="System.Collections.Generic" #>
using Godot;

namespace ScientiaMagica.Common.Assets {
    public struct Scenes {
        <#
    var ourLocation = Path.GetFullPath(Host.ResolvePath("Assets\\.."));
    while (!Directory.GetFiles(ourLocation, "*.godot").Any()) {
        ourLocation = Path.GetDirectoryName(ourLocation);
        if (ourLocation == null) {
            throw new InvalidOperationException("Asset T4 builder is not in the directory of a godot project");
        }
    }

    var baseLocation = new Uri(ourLocation);
    var output = new List<string>();
    
    foreach (var file in Directory.EnumerateFiles(ourLocation, "*.tscn", SearchOption.AllDirectories)) {
        var relative = baseLocation.MakeRelativeUri(new Uri(file)).OriginalString;
        relative = Regex.Replace(relative, @"^.+?[\\/]", @"res://");
        var name = Path.GetFileNameWithoutExtension(file);

        var assetType = Regex.Match(File.ReadAllText(file), @"\[\s?node.+?type=""(.+?)\""").Groups[1];
        output.Add($"public static readonly SceneLoader<{assetType}> {name} = new SceneLoader<{assetType}>(\"{relative}\");");
    }
    
    Write(string.Join("\n\t\t", output));

    //var output = string.Join("\n\t\t", scenes);
    //Write(output);#>
    
    }
}